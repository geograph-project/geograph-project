#############################################################################

source srcgaz
{
        type                            = mysql
        strip_html                      = 0
        sql_host                        = localhost
        sql_user                        = geograph
        sql_db                          = geograph_live
        sql_port                        = 3306
        sql_query                       = \
                SELECT id, name,gr,localities,autocomplete,grs,sort_order, \
                IF(f_code IN ('C','T','O'),name,'') as name_dup, \
                IF(f_code IN ('C','T','O'),localities,'') as localities_dup, \
                IF(f_code IN ('C','T','O'),autocomplete,'') as autocomplete_dup \
                FROM placename_index
        sql_group_column        = sort_order
        sql_query_info          = SELECT id,f_code,name,localities FROM placename_index WHERE id=$id
}

index gaz
{
        source                  = srcgaz
        path                    = /var/sphinx/gaz
        docinfo                 = extern
        morphology                      = none
        stopwords                       =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 0
        min_infix_len           = 0
}

#############################################################################

source content
{
	type				= mysql
	strip_html			= 0
	sql_host			= jam.geograph.org.uk
	sql_user			= geograph
	sql_db				= geograph_live
	sql_port			= 3306
	sql_query			= \
		SELECT content_id,title,extract,words,realname,updated \
		from content \
			left join user using (user_id)

        sql_date_column        = updated
        sql_query_info          = SELECT * FROM content WHERE content_id=$id
}

index content_stemmed
{
	source			= content
	path			= /var/sphinx/content_stemmed
	docinfo			= extern
	morphology			= stem_en
	stopwords			=
	min_word_len		= 1
	charset_type		= sbcs

	min_prefix_len		= 0
	min_infix_len		= 0
}

#############################################################################

source gridimage
{
        type                            = mysql
        strip_html                      = 0
        sql_host                        = jam.geograph.org.uk
        sql_user                        = geograph
        sql_db                          = geograph_live
        sql_port                        = 3306
#	sql_query_pre 			= REPLACE INTO sph_counter SELECT 'gridimage_search', MAX(gridimage_id) FROM gridimage_search
        sql_query_pre                   = 
#swap the above two lines if want the main source to update the counter - this way we can update just the stemmed index
        sql_query                       = \
                SELECT gridimage_id, UNIX_TIMESTAMP(submitted) AS submitted, \
                title, comment, imageclass, realname, grid_reference, \
                substring(grid_reference,1,length(grid_reference)-4) as myriad, \
                concat(substring(grid_reference,1,length(grid_reference)-3),substring(grid_reference,length(grid_reference)-1,1)) as tenk_square \
                FROM gridimage_search \
		WHERE gridimage_id<=( SELECT max_doc_id FROM sph_counter WHERE counter_id='gridimage_search' )

        sql_date_column         = submitted
        sql_query_info          = SELECT * FROM gridimage_search WHERE gridimage_id=$id
}
source gi_delta : gridimage
{
	sql_query_pre                   = 
        sql_query                       = \
                SELECT gridimage_id, UNIX_TIMESTAMP(submitted) AS submitted, \
                title, comment, imageclass, realname, grid_reference, \
                substring(grid_reference,1,length(grid_reference)-4) as myriad, \
                concat(substring(grid_reference,1,length(grid_reference)-3),substring(grid_reference,length(grid_reference)-1,1)) as tenk_square \
                FROM gridimage_search \
                WHERE gridimage_id>( SELECT max_doc_id FROM sph_counter WHERE counter_id='gridimage_search')
}

####

source gi_stemmed : gridimage
{
	sql_query_pre 			= REPLACE INTO sph_counter SELECT 'gridimage_search', MAX(gridimage_id) FROM gridimage_search
#	sql_query_pre                   =
#swap the above two lines if want the main source to update the counter - this way we can update just the stemmed index
}
source gi_delta_stemmed : gi_delta
{
	sql_query_pre                   =
}

#################

index gridimage
{
        source                  = gridimage
        path                    = /var/sphinx/gridimage
        docinfo                 = extern
        morphology                      = none
        stopwords                       =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 0
        min_infix_len           = 0
}
index gi_delta : gridimage
{
	source 			= gi_delta
	path 			= /var/sphinx/gi_delta
}

index gi_stemmed : gridimage
{
	source                  = gi_stemmed
        path                    = /var/sphinx/gi_stemmed
        morphology              = stem_en
}
index gi_delta_stemmed : gi_delta
{
        source                  = gi_delta_stemmed
        path                    = /var/sphinx/gi_delta_stemmed
        morphology              = stem_en
}


#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit
	#
	# may be specified in bytes (no postfix), kilobytes (mem_limit=1000K)
	# or megabytes (mem_limit=10M)
	#
	# will grow if set unacceptably low
	# will warn if set too low and potentially hurting the performance
	#
	# optional, default is 32M
	mem_limit			= 32M
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# IP address on which search daemon will bind and accept
	# incoming network requests
	#
	# optional, default is to listen on all addresses,
	# ie. address = 0.0.0.0
	#
	# address				= 127.0.0.1
	# address				= 192.168.0.1


	# port on which search daemon will listen
	port				= 3312


	# log file
	# searchd run info is logged here
	log					= /var/log/searchd.log


	# query log file
	# all the search queries are logged here
	query_log			= /var/log/query.log


	# client read timeout, seconds
	read_timeout		= 5


	# maximum amount of children to fork
	# useful to control server load
	max_children		= 30


	# a file which will contain searchd process ID
	# used for different external automation scripts
	# MUST be present
	pid_file			= /var/log/searchd.pid


	# maximum amount of matches this daemon would ever retrieve
	# from each index and serve to client
	#
	# this parameter affects per-client memory and CPU usage
	# (16+ bytes per match) in match sorting phase; so blindly raising
	# it to 1 million is definitely NOT recommended
	#
	# starting from 0.9.7, it can be decreased on the fly through
	# the corresponding API call; increasing is prohibited to protect
	# against malicious and/or malformed requests
	#
	# default is 1000 (just like with Google)
	max_matches			= 1000
}

# --eof--

