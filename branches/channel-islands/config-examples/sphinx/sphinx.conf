#############################################################################
# GAZETTEER
##########

source srcgaz
{
        type                    = mysql
        sql_host                = localhost
        sql_user                = geograph
        sql_db                  = geograph_live
        sql_port                = 3306
        sql_query               = \
                SELECT id, name,gr,localities,grs,score \
                FROM placename_index
        sql_attr_uint           = score
        sql_query_info          = SELECT name FROM placename_index WHERE id=$id
}

index gaz
{
        source                  = srcgaz
        path                    = /var/sphinx/gaz
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

#	enable_star             = 1
        min_prefix_len          = 1
        min_infix_len           = 0
}

index gaz_stopped : gaz
{
	path                    = /var/sphinx/gaz_stopped
	stopwords               = /var/sphinx/gaz_stopwords.txt	
}
#built with "indexer gaz --buildstops gaz_stopwords.txt 1000"



index gaz_stemmed : gaz
{
        path                    = /var/sphinx/gaz_stemmed
        morphology              = stem_en
 enable_star             = 1
        min_prefix_len          = 10
}

index gaz_meta : gaz
{
        path                    = /var/sphinx/gaz_meta
	morphology              = metaphone
 enable_star             = 1
	min_prefix_len          = 10
}



#############################################################################
# Groups
##########

source srcgroup
{
        type                    = mysql
        sql_host                = jam.geograph.org.uk
        sql_user                = geograph
        sql_db                  = geograph_live
        sql_port                = 3306
        sql_query               = \
                SELECT gridimage_group_stat_id,label,images \
                FROM gridimage_group_stat 
        sql_query_info          = SELECT * FROM gridimage_group_stat WHERE gridimage_group_stat_id=$id
	sql_attr_uint           = images
}

index group
{
        source                  = srcgroup
        path                    = /var/sphinx/group
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 2
        min_infix_len           = 0
}



#############################################################################
# USERS
##########

source srcuser
{
        type                    = mysql
        sql_host                = jam.geograph.org.uk
        sql_user                = geograph
        sql_db                  = geograph_live
        sql_port                = 3306
        sql_query               = \
                SELECT user_id, nickname, realname \
                FROM user WHERE rights LIKE '%basic%'
        sql_query_info          = SELECT user_id, nickname, realname FROM user WHERE user_id=$id
}

index user
{
        source                  = srcuser
        path                    = /var/sphinx/user
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 2
        min_infix_len           = 0
}







#############################################################################
# DISCUSSION
##########

source post
{
        type                    = mysql
        sql_host                = jam.geograph.org.uk
        sql_user                = geograph
        sql_db                  = geograph_live
        sql_port                = 3306
#	sql_query_pre           = REPLACE INTO sph_counter SELECT 'geobb_posts', MAX(post_id) FROM geobb_posts
        sql_query_pre           = 
#swap the above two lines if want the main source to update the counter - this way we can update just the stemmed index
        sql_query                       = \
                SELECT p.post_id, UNIX_TIMESTAMP(post_time) AS post_time, p.forum_id as forum,\
                        topic_title as title, post_text as text, poster_name as name, \
                        REPLACE(post_time,'-','') AS day, REPLACE(substring(post_time,1,7),'-','') AS month, substring(post_time,1,4) AS year \
                FROM geobb_posts p \
                INNER JOIN geobb_topics using (topic_id) \
                WHERE p.post_id<=( SELECT max_doc_id FROM sph_counter WHERE counter_id='geobb_posts' )

        sql_attr_timestamp      = post_time
#	sql_attr_uint           = forum
        sql_query_info          = SELECT * FROM geobb_posts WHERE post_id=$id
}
source post_delta : post
{
        sql_query_pre           = 
        sql_query               = \
                SELECT p.post_id, UNIX_TIMESTAMP(post_time) AS post_time, p.forum_id as forum,\
                        topic_title as title, post_text as text, poster_name as name, \
                        REPLACE(post_time,'-','') AS day, REPLACE(substring(post_time,1,7),'-','') AS month, substring(post_time,1,4) AS year \
                        FROM geobb_posts p \
                INNER JOIN geobb_topics using (topic_id) \
                WHERE p.post_id>( SELECT max_doc_id FROM sph_counter WHERE counter_id='geobb_posts')
}

####

source post_stemmed : post
{
        sql_query_pre           = REPLACE INTO sph_counter SELECT 'geobb_posts', MAX(post_id) FROM geobb_posts
#       sql_query_pre           =
#swap the above two lines if want the main source to update the counter - this way we can update just the stemmed index
}
source post_delta_stemmed : post_delta
{
        sql_query_pre           =
}

#################

index post
{
        source                  = post
        path                    = /var/sphinx/post
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 0
        min_infix_len           = 0
}
index post_delta : post
{
        source                  = post_delta
        path                    = /var/sphinx/post_delta
}

index post_stemmed : post
{
        source                  = post_stemmed
        path                    = /var/sphinx/post_stemmed
        morphology              = stem_en
}
index post_delta_stemmed : post_delta
{
        source                  = post_delta_stemmed
        path                    = /var/sphinx/post_delta_stemmed
        morphology              = stem_en
}

#############################################################################
# CONTENT
##########

source content
{
	type			= mysql
	sql_host		= jam.geograph.org.uk
	sql_user		= geograph
	sql_db			= geograph_live
	sql_port		= 3306
	sql_query		= \
		SELECT content_id,title,extract,words,realname,UNIX_TIMESTAMP(updated) as updated,content.source,type \
		from content \
			left join user using (user_id)

	sql_attr_timestamp	= updated
	sql_query_info		= SELECT content_id,title,extract,type,url FROM content WHERE content_id=$id
}

index content_stemmed
{
	source			= content
	path			= /var/sphinx/content_stemmed
	docinfo			= extern
	morphology		= stem_en
	stopwords		=
	min_word_len		= 1
	charset_type		= sbcs

	min_prefix_len		= 0
	min_infix_len		= 0
}

index content
{
        source                  = content
        path                    = /var/sphinx/content
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 0
        min_infix_len           = 0
}

#############################################################################
# TICKETS
##########

source tickets
{
        type                    = mysql
        sql_host                = jam.geograph.org.uk
        sql_user                = geograph
        sql_db                  = geograph_live
        sql_port                = 3306

        sql_query               = \
                SELECT t.gridimage_ticket_id, t.status, UNIX_TIMESTAMP(suggested) AS suggested, \
                gi.title, gi.comment, gi.imageclass, gi.realname, gi.grid_reference, \
                SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4) AS myriad, \
                CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)) AS hectad, \
                notes, s.realname as suggester \
                FROM gridimage_ticket t \
                        INNER JOIN gridimage_search gi ON (gi.gridimage_id = t.gridimage_id) \
                        INNER JOIN user AS s ON (s.user_id = t.user_id) \
                WHERE t.status IN ('pending','open')
        sql_attr_timestamp      = suggested
        sql_query_info          = SELECT * FROM gridimage_ticket WHERE gridimage_ticket_id=$id
}
                
index tickets
{
        source                  = tickets
        path                    = /var/sphinx/tickets
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 0
        min_infix_len           = 0
}

#############################################################################
# IMAGES
##########

source gridimage
{
        type                    = mysql
        sql_host                = jam.geograph.org.uk
        sql_user                = geograph
        sql_db                  = geograph_live
        sql_port                = 3306

        sql_query_pre           = 

        sql_query_range         = SELECT 1, max_doc_id FROM sph_counter WHERE counter_id='gridimage_search'
        sql_range_step          = 50000

        sql_query               = \
                SELECT gi.gridimage_id, UNIX_TIMESTAMP(gi.submitted) AS submitted, TO_DAYS(REPLACE(gi.imagetaken,'-00','-01')) AS takendays, gi.user_id, \
                gi.title, gi.comment, gi.imageclass, gi.realname, gi.grid_reference, \
                SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4) AS myriad, \
                CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)) AS hectad, \
                REPLACE(gi.imagetaken,'-','') AS takenday, REPLACE(substring(gi.imagetaken,1,7),'-','') AS takenmonth, substring(gi.imagetaken,1,4) AS takenyear, \
                RADIANS(wgs84_lat) AS wgs84_lat,RADIANS(wgs84_long) AS wgs84_long, \
		IF(gi.moderation_status='accepted','supplemental',gi.moderation_status) AS status, \
		CRC32(gi.imageclass) AS classcrc, \
                (gi.reference_index * 10000000 + (viewpoint_northings DIV 1000) * 1000 + viewpoint_eastings DIV 1000) AS viewsquare \
                FROM gridimage_search gi\
                        INNER JOIN gridimage g2 \
                        ON (gi.gridimage_id = g2.gridimage_id) \
                WHERE gi.gridimage_id>=$start AND gi.gridimage_id<=$end

        sql_attr_timestamp      = submitted
#       sql_group_column        = viewsquare  #we do this a fulltext filter now
        sql_attr_uint           = takendays
	sql_attr_uint           = classcrc
        sql_attr_float          = wgs84_lat
        sql_attr_float          = wgs84_long
        sql_query_info          = SELECT * FROM gridimage_search WHERE gridimage_id=$id
}

source gi_delta : gridimage
{
        sql_query_pre           = 

        sql_query_range         = SELECT max_doc_id+1, (SELECT MAX(gridimage_id) FROM gridimage_search)+1 FROM sph_counter WHERE counter_id='gridimage_search'
        sql_range_step          = 10000
}

####
# stemmed has the sql_query_pre so it can be run only or first

source gi_stemmed : gridimage
{
        sql_query_pre           = REPLACE INTO sph_counter SELECT 'gridimage_search', MAX(gridimage_id) FROM gridimage_search
}
source gi_delta_stemmed : gi_delta
{
        sql_query_pre           =
}

#################

index gridimage
{
        source                  = gridimage
        path                    = /var/sphinx/gridimage
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs

        min_prefix_len          = 0
        min_infix_len           = 0
}
index gi_delta : gridimage
{
        source                  = gi_delta
        path                    = /var/sphinx/gi_delta
}

index gi_stemmed : gridimage
{
        source                  = gi_stemmed
        path                    = /var/sphinx/gi_stemmed
        morphology              = stem_en
}
index gi_delta_stemmed : gi_delta
{
        source                  = gi_delta_stemmed
        path                    = /var/sphinx/gi_delta_stemmed
        morphology              = stem_en
}

index gi_star
{
        source                  = gridimage
        path                    = /var/sphinx/gridimage_star
        docinfo                 = extern
        morphology              = none
        stopwords               =
        min_word_len            = 1
        charset_type            = sbcs
	enable_star		= 1
        min_prefix_len          = 0
        min_infix_len           = 3
	infix_fields 		= title,comment,imageclass
}



#############################################################################
## indexer settings
#############################################################################

indexer
{
	# memory limit
	#
	# may be specified in bytes (no postfix), kilobytes (mem_limit=1000K)
	# or megabytes (mem_limit=10M)
	#
	# will grow if set unacceptably low
	# will warn if set too low and potentially hurting the performance
	#
	# optional, default is 32M
	mem_limit		= 32M
}

#############################################################################
## searchd settings
#############################################################################

searchd
{
	# IP address on which search daemon will bind and accept
	# incoming network requests
	#
	# optional, default is to listen on all addresses,
	# ie. address = 0.0.0.0
	#
	# address		= 127.0.0.1
	# address		= 192.168.0.1


	# port on which search daemon will listen
	port			= 3312


	# log file
	# searchd run info is logged here
	log			= /var/sphinx/log/searchd.log


	# query log file
	# all the search queries are logged here
	query_log		= /var/sphinx/log/query.log


	# client read timeout, seconds
	read_timeout		= 5


	# maximum amount of children to fork
	# useful to control server load
	max_children		= 30


	# a file which will contain searchd process ID
	# used for different external automation scripts
	# MUST be present
	pid_file		= /var/sphinx/run/searchd.pid


	# maximum amount of matches this daemon would ever retrieve
	# from each index and serve to client
	#
	# this parameter affects per-client memory and CPU usage
	# (16+ bytes per match) in match sorting phase; so blindly raising
	# it to 1 million is definitely NOT recommended
	#
	# starting from 0.9.7, it can be decreased on the fly through
	# the corresponding API call; increasing is prohibited to protect
	# against malicious and/or malformed requests
	#
	# default is 1000 (just like with Google)
	max_matches		= 1000
}

# --eof--


