#!/usr/bin/perl
#
# Plugin to monitor memcache statistics
#
# Tip: To see if it's already set up correctly, just run this plugin
# with the parameter "autoconf". If you get a "yes", everything should
# work like a charm already.
#
# Parameters supported:
#
# 	config
# 	autoconf
#
# Configurable variables
# 
#	host		Host of the memcache daemon
#	port		Port of the memcache daemon
#
# Author: Joshua Thijssen <jthijssen@noxlogic.nl>
#
# This is work in progress. We could graph more data (bytes rx vs bytes tx) and the number of
# items stored etc. A nice upgrade should also be that we could select multiple servers and plot
# them in the same graph (much like the filesystem plugins etc).
#
# Magic markers:
#%# family=auto
#%# capabilities=autoconf

my $ret = undef;

if (! eval "require Cache::Memcached;")
{
	$ret = "Cache::Memcached not found";
}

my $HOST = exists $ENV{'host'} ? $ENV{'host'} : "127.0.0.1";
my $PORT = exists $ENV{'port'} ? $ENV{'port'} : 11211;

if ( exists $ARGV[0] and $ARGV[0] eq "autoconf" )
{
	if ($ret)
	{
		print "no ($ret)\n";
		exit 1;
	}

	# Todo: we can always connect to a memcache server without any errors so I cannot really
	# find a way to detect the presence of a memcache instance. Maybe a forced write/read/delete
	# but there should be a better way somewhere...
	print "yes\n";
	exit 0;
}

if ( exists $ARGV[0] and $ARGV[0] eq "config" )
{
	print "graph_title Memcache Get hits\n";
	print "graph_args --base 1024\n";
	print "graph_vlabel cache hits and misses per \${graph_period}\n";
	print "graph_category memcache\n";
	print "memcache_hit.label hits\n";
	print "memcache_hit.type DERIVE\n";
	print "memcache_hit.min 0\n";
	print "memcache_hit.draw LINE2\n";
	print "memcache_hit.info Number of cache hits\n";
	print "memcache_miss.label misses\n";
	print "memcache_miss.type DERIVE\n";
	print "memcache_miss.min 0\n";
	print "memcache_miss.draw LINE2\n";
	print "memcache_miss.info Number of cache misses\n";
	exit 0;
}

my $mc = new Cache::Memcached { 'servers' => [ "$HOST:$PORT" ] };
my $stats = $mc->stats ();
print "memcache_hit.value ".$stats->{hosts}->{"$HOST:$PORT"}->{misc}->{get_hits}."\n";
print "memcache_miss.value ".$stats->{hosts}->{"$HOST:$PORT"}->{misc}->{get_misses}."\n";

# vim:syntax=perl
