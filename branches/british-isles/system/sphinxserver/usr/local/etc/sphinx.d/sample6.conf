#################
#
# NOTE: See scripts/createsphinx-new.php for the PHP that creates the sphinx_* material views, that should be called just prior to rebuilding these indexes!
# at https://svn.geograph.org.uk/svn/branches/british-isles/scripts/createsphinx-new.php
#
#################

source sample6 : db_slave {

        sql_query_range         = SELECT min(gridimage_id), max(gridimage_id) FROM gridimage_search WHERE gridimage_id < 250000 
        sql_range_step          = 50000


sql_query = SELECT \
        gi.gridimage_id, \
        UNIX_TIMESTAMP(gi.submitted) AS submitted, \
        TO_DAYS(REPLACE(gi.imagetaken,'-00','-01')) AS takendays, \
        REPLACE(gi.imagetaken,'-','') AS takenday, \
        REPLACE(substring(gi.imagetaken,1,7),'-','') AS takenmonth, \
        substring(gi.imagetaken,1,4) AS takenyear, \
        CONCAT(substring(gi.imagetaken,1,3),'tt') AS decade, \
	coalesce(MONTHNAME(gi.imagetaken),'Unknown') AS monthname, \
        gi.user_id, CONCAT('user',gi.user_id) as user, \
        gi.realname, \
        gi.title, \
        gi.comment,\
        SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-4) AS myriad,\
        CONCAT(SUBSTRING(gi.grid_reference,1,LENGTH(gi.grid_reference)-3),SUBSTRING(gi.grid_reference,LENGTH(gi.grid_reference)-1,1)) AS hectad,\
        gi.imageclass, \
        gi.grid_reference,\
        (gi.reference_index * 1000000000 + IF(g2.natgrlen+0 <= 3,(g2.nateastings DIV 100) * 100000 + (g2.natnorthings DIV 100),0)) AS scenti,\
        RADIANS(wgs84_lat) AS wgs84_lat,\
        RADIANS(wgs84_long) AS wgs84_long,\
	CONCAT('ftf',gi.ftf) AS ftf,\
        CONCAT('_SEP_ ',REPLACE(contexts,';',' _SEP_ '),' _SEP_') AS contexts, context_ids, \
        CONCAT('_SEP_ ',REPLACE(subjects,';',' _SEP_ '),' _SEP_') AS subjects, subject_ids, \
        CONCAT('_SEP_ ',coalesce(REPLACE(types,';',' _SEP_ '), IF(gi.moderation_status='accepted','Supplemental','Geograph')) ,' _SEP_') AS types, \
		coalesce(type_ids, IF(gi.moderation_status='accepted',195749,172412) ) as type_ids, \
        CONCAT('_SEP_ ',REPLACE(buckets, ';',' _SEP_ '),' _SEP_') AS buckets, bucket_ids, \
        CONCAT('_SEP_ ',REPLACE(t.tags,  ';',' _SEP_ '),' _SEP_') AS tags, t.tag_ids, \
        CONCAT('_SEP_ ',REPLACE(groups,  ';',' _SEP_ '),' _SEP_') AS groups, group_ids,\
        CONCAT('_SEP_ ',REPLACE(terms,   ';',' _SEP_ '),' _SEP_') AS terms,term_ids, \
        CONCAT('_SEP_ ',REPLACE(snippets,';',' _SEP_ '),' _SEP_') AS snippets, snippet_ids, \
        CONCAT('_SEP_ ',REPLACE(wikis,   ';',' _SEP_ '),' _SEP_') AS wikis, wiki_ids,\
        IF(gi.moderation_status='accepted','supplemental',gi.moderation_status) AS status,\
        (gi.reference_index * 1000000 + (viewpoint_northings DIV 1000) * 1000 + viewpoint_eastings DIV 1000) AS viewsquare,\
        IF(natnorthings>0 AND viewpoint_eastings>0,\
                pow(2,floor(log2(SQRT(\
                        pow(cast(nateastings as signed)-cast(viewpoint_eastings as signed),2)\
                        +pow(cast(natnorthings as signed)-cast(viewpoint_northings as signed),2)\
                ))))\
                ,'Unknown') AS distance,\
        IF(view_direction=-1,'Unknown',view_direction) AS direction,\
        IF(ABS(cast(width as signed)-cast(height as signed)) <= 60,'square',IF(width>height,IF(width>(height*2),'panorama','landscape'),'portrait')) AS format,\
        gs.placename_id, \
        coalesce(sequence,gi.gridimage_id+12000000) AS sequence, \
        coalesce(score,130) AS score, \
        coalesce(baysian*100,300) AS baysian, \
        coalesce(Place,'Unknown') as place,\
        coalesce(County,'Unknown') as county,\
        coalesce(Country,'Unknown') as country,\
        SUBSTRING(MD5(CONCAT(gi.gridimage_id,gi.user_id,'secret-hash')),1,8) AS hash, \
	concat( if(greatest(original_width,original_height) >= 3000,'3000 ',''), if(greatest(original_width,original_height) >= 1600,'1600 ',''), if(greatest(original_width,original_height) >= 1024,'1024 ',''), if(greatest(original_width,original_height) >= 800,'800 ',''), if(greatest(original_width,original_height) >= 640,'641 ','') ) AS larger, \
	greatest(original_width,original_height) as original, \
	coalesce(l.name,'Unknown') AS landcover \
FROM gridimage_search gi\
        INNER JOIN gridimage g2 USING (gridimage_id)\
        INNER JOIN gridimage_size USING (gridimage_id)\
        INNER JOIN gridsquare gs USING (gridsquare_id)\
        LEFT JOIN gridimage_sequence s USING (gridimage_id)\
        LEFT JOIN sphinx_placenames p ON (p.placename_id = gs.placename_id)\
        LEFT JOIN sphinx_tags t ON  (gi.gridimage_id = t.gridimage_id)\
        LEFT JOIN sphinx_terms c ON (gi.gridimage_id = c.gridimage_id)\
	LEFT JOIN landcover l USING (landcover_id) \
WHERE gi.gridimage_id>=$start AND gi.gridimage_id<=$end

sql_attr_multi          = uint my_square from query; \
	select gridimage_id, u.user_id from gridimage_search inner join user_gridsquare u using (grid_reference) order by gridimage_id

sql_attr_multi          = uint content_ids from query; \
	(select gridimage_id,content_id from gridimage_content) \
	UNION (select id as gridimage_id,1 as content_id from gallery_ids where baysian > 3) \
	UNION (select gp.gridimage_id,content_id from content inner join gridimage_post gp on (foreign_id=topic_id) where source in ('gallery','themed','gsd')) \
	UNION (select gs.gridimage_id,content_id from content inner join gridimage_snippet gs on (foreign_id=snippet_id) where source = 'snippet') \
	ORDER BY gridimage_id

sql_attr_timestamp      = submitted
sql_attr_uint           = takendays
sql_field_string        = takenday
sql_field_string        = takenmonth
sql_field_string        = takenyear
sql_field_string        = decade
sql_field_string        = monthname
sql_attr_uint           = user_id
sql_field_string        = realname
sql_field_string        = title
sql_field_string        = myriad
sql_field_string        = hectad
sql_field_string        = imageclass
sql_field_string        = grid_reference
sql_attr_uint           = scenti
sql_attr_float          = wgs84_lat
sql_attr_float          = wgs84_long
sql_field_string        = contexts
sql_attr_multi          = uint context_ids from field
sql_field_string        = subjects
sql_attr_multi          = uint subject_ids from field
sql_field_string        = types
sql_attr_multi          = uint type_ids from field
sql_field_string        = buckets
sql_attr_multi          = uint bucket_ids from field
sql_field_string        = tags
sql_attr_multi          = uint tag_ids from field
sql_field_string        = groups
sql_attr_multi          = uint group_ids from field
sql_field_string        = terms
sql_attr_multi          = uint term_ids from field
sql_field_string        = snippets
sql_attr_multi          = uint snippet_ids from field
sql_field_string        = wikis
sql_attr_multi          = uint wiki_ids from field
sql_field_string        = status
sql_attr_uint           = viewsquare
sql_field_string        = distance
sql_field_string        = direction
sql_field_string        = format
sql_attr_uint           = placename_id
sql_attr_uint           = sequence
sql_attr_uint           = score
sql_attr_uint           = baysian
sql_field_string        = place
sql_field_string        = county
sql_field_string        = country
sql_field_string        = hash
sql_attr_uint           = original
sql_field_string        = landcover

}
index sample6 {
        source                  = sample6
        path                    = /var/sphinx/sample6
        docinfo                 = extern

        min_word_len            = 1
        morphology              = stem_en
        index_exact_words       = 1
        min_prefix_len = 2
        prefix_fields = imageclass,tags,county,place,realname,takenday,takenmonth,takenyear
        dict=crc
}

